// Mocks generated by Mockito 5.4.2 from annotations
// in desafio_clock_it_in/test/features/auth/cubit/auth_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:desafio_clock_it_in/features/auth/models/token.dart' as _i2;
import 'package:desafio_clock_it_in/features/auth/repositories/auth_user_repository.dart'
    as _i3;
import 'package:desafio_clock_it_in/features/auth/repositories/token_repository.dart'
    as _i5;
import 'package:desafio_clock_it_in/features/auth/services/local_auth_service.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeToken_0 extends _i1.SmartFake implements _i2.Token {
  _FakeToken_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IAuthUserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthUserRepository extends _i1.Mock
    implements _i3.IAuthUserRepository {
  MockIAuthUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Token> signIn(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            username,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.Token>.value(_FakeToken_0(
          this,
          Invocation.method(
            #signIn,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Token>);
  @override
  _i4.Future<_i2.Token> signUp(
    String? name,
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            name,
            username,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.Token>.value(_FakeToken_0(
          this,
          Invocation.method(
            #signUp,
            [
              name,
              username,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Token>);
  @override
  _i4.Future<_i2.Token?> refreshToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [refreshToken],
        ),
        returnValue: _i4.Future<_i2.Token?>.value(),
      ) as _i4.Future<_i2.Token?>);
  @override
  _i4.Future<void> signOut(String? accessToken) => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [accessToken],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<bool> checkAuth(String? accessToken) => (super.noSuchMethod(
        Invocation.method(
          #checkAuth,
          [accessToken],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [ITokenRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockITokenRepository extends _i1.Mock implements _i5.ITokenRepository {
  MockITokenRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveToken(_i2.Token? token) => (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [token],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.Token?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i4.Future<_i2.Token?>.value(),
      ) as _i4.Future<_i2.Token?>);
  @override
  _i4.Future<void> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [ILocalAuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocalAuthService extends _i1.Mock implements _i6.ILocalAuthService {
  MockILocalAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isBiometricAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isBiometricAvailable,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> authenticate() => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
